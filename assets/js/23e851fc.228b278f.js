"use strict";(self.webpackChunkfdm_monster_docs=self.webpackChunkfdm_monster_docs||[]).push([[586],{4800:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var i=o(4848),r=o(8453);const t={title:"Pre-configuring the FDM Monster Server",sidebar_position:1},s=void 0,d={id:"configuration/preconfiguration",title:"Pre-configuring the FDM Monster Server",description:"After each environment change the FDM Monster server must be restarted for the change to take effect!",source:"@site/docs/2_configuration/preconfiguration.md",sourceDirName:"2_configuration",slug:"/configuration/preconfiguration",permalink:"/docs/configuration/preconfiguration",draft:!1,unlisted:!1,editUrl:"https://github.com/fdm-monster/fdm-monster-docs/docs/2_configuration/preconfiguration.md",tags:[],version:"current",lastUpdatedBy:"David Zwart",lastUpdatedAt:171287216e4,sidebarPosition:1,frontMatter:{title:"Pre-configuring the FDM Monster Server",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/configuration/"},next:{title:"Settings",permalink:"/docs/configuration/settings/"}},c={},l=[{value:"Required and optional variables",id:"required-and-optional-variables",level:2},{value:"The <code>.env</code> file",id:"the-env-file",level:2},{value:"Applying it to your setup",id:"applying-it-to-your-setup",level:2},{value:"Node.js with node-linux, node-windows or pm2",id:"nodejs-with-node-linux-node-windows-or-pm2",level:3},{value:"Docker-compose",id:"docker-compose",level:3}];function a(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"After each environment change the FDM Monster server must be restarted for the change to take effect!"})}),"\n",(0,i.jsx)(n.p,{children:"FDM Monster Server can be configured with environment variables. There are different ways to do this for each setup:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["specify a ",(0,i.jsx)(n.code,{children:".env"})," file. This works for these setups:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Windows service setup with ",(0,i.jsx)(n.code,{children:"node-windows"})]}),"\n",(0,i.jsxs)(n.li,{children:["Linux service setup with ",(0,i.jsx)(n.code,{children:"node-linux"})]}),"\n",(0,i.jsxs)(n.li,{children:["Node.js with ",(0,i.jsx)(n.code,{children:"pm2"})]}),"\n",(0,i.jsxs)(n.li,{children:["Node.js with ",(0,i.jsx)(n.code,{children:"nodemon"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["docker - specify each variable separately, this can become tedious:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["docker: using the ",(0,i.jsx)(n.code,{children:"-e VARIABLE=value"})," command repeatedly"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["docker - all at once","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["docker: using the ",(0,i.jsx)(n.code,{children:"--env-file ./.env"}),"\ncommand ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/engine/reference/commandline/run/#options",children:"(Read docker options)"})]}),"\n",(0,i.jsxs)(n.li,{children:["docker-compose: using the ",(0,i.jsx)(n.code,{children:"environment"}),"\nsection ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/compose/environment-variables/",children:"(Read docker-compose environment)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"required-and-optional-variables",children:"Required and optional variables"}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsxs)(n.p,{children:["Since FDM Monster Server v1.6.0+, a new database type was added named SQLite managed with the TypeORM library.\nThe file-based database SQLite allows for a standalone FDM Monster setup without MongoDB.\nHence, no running MongoDB database would be required, if this new mode is enabled.\nEnable this mode by setting ",(0,i.jsx)(n.code,{children:"ENABLE_EXPERIMENTAL_TYPEORM=true"}),". You do not have to specify ",(0,i.jsx)(n.code,{children:"MONGO"})," anymore in that case!\nThe ",(0,i.jsx)(n.code,{children:"MONGO"})," variable will be ignored by FDM Monster."]}),(0,i.jsx)(n.p,{children:"Also note that no data is migrated from MongoDB to SQLite. You can use YAML export & import for migrating most data."}),(0,i.jsx)(n.p,{children:"This new mode is experimental, although it has been tested quite a bit. We hope you are in the position to provide\nfeedback\nin case of errors or unexpected behaviour!"})]}),"\n",(0,i.jsx)(n.p,{children:"The following variables are read and used by FDM Monster at startup. Always restart your server after a change."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MONGO"})," (Optional, required before 1.6.x) ",(0,i.jsx)(n.strong,{children:"the connection to mongodb"}),". For example:"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"MONGO=mongodb://127.0.0.1:27017/fdm-monster"})}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ENABLE_EXPERIMENTAL_TYPEORM"})," (Optional) ",(0,i.jsxs)(n.strong,{children:["a flag indicating SQLite should be used instead of MongoDB. Setting it to\nexactly ",(0,i.jsx)(n.code,{children:"true"})," will enable this new mode."]})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"ENABLE_EXPERIMENTAL_TYPEORM=true"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SERVER_PORT"})," (Optional, default=4000) ",(0,i.jsx)(n.strong,{children:"the port of the local FDM Monster website"}),". For example:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"SERVER_PORT=4000"})}),"\n"]}),"\n",(0,i.jsxs)(n.h2,{id:"the-env-file",children:["The ",(0,i.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,i.jsxs)(n.p,{children:["A very simple text file with a variable per line. The following ",(0,i.jsx)(n.code,{children:".env"})," is often already enough to make sure FDM Monster\nworks as you like:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dotenv",children:"MONGO=mongodb://127.0.0.1:27017/fdm-monster\nSERVER_PORT=4000\n"})}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, the new SQLite (TypeORM) mode can be enabled as such:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-dotenv",children:"ENABLE_EXPERIMENTAL_TYPEORM=true\nSERVER_PORT=4000\n"})}),"\n",(0,i.jsx)(n.h2,{id:"applying-it-to-your-setup",children:"Applying it to your setup"}),"\n",(0,i.jsx)(n.p,{children:"So, you understand the variables to configure FDM Monster now. How do I set this up for my environment? Read below for\nyour specific scenario."}),"\n",(0,i.jsx)(n.h3,{id:"nodejs-with-node-linux-node-windows-or-pm2",children:"Node.js with node-linux, node-windows or pm2"}),"\n",(0,i.jsxs)(n.p,{children:["Create a ",(0,i.jsx)(n.code,{children:".env"})," file in the ",(0,i.jsx)(n.code,{children:"fdm-monster/server"})," folder with the ",(0,i.jsx)(n.strong,{children:"required"})," and/or ",(0,i.jsx)(n.em,{children:"optional"})," variables by copying\nthe ",(0,i.jsx)(n.code,{children:".env.template"})," file.\nCopy this and rename it to ",(0,i.jsx)(n.code,{children:".env"})," to get started quicker.\nThe server will automatically create the ",(0,i.jsx)(n.code,{children:".env"})," file for you, and the server logs will show what is going wrong if\nsomething is missing."]}),"\n",(0,i.jsxs)(n.p,{children:["Feel adventurous? Customize the file to your liking, but again ALWAYS make sure the ",(0,i.jsx)(n.strong,{children:"required"})," variables are correctly\nset."]}),"\n",(0,i.jsx)(n.h3,{id:"docker-compose",children:"Docker-compose"}),"\n",(0,i.jsxs)(n.p,{children:["With docker-compose you have a great tool to pass environment variables use the ",(0,i.jsx)(n.code,{children:"environment"})," section.\nHere is how the environment section in docker would look."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"services:\n  fdm-monster:\n    # ... other sections here\n    environment:\n      #       To use SQLite / TypeORM instead:\n      #      - ENABLE_EXPERIMENTAL_TYPEORM=true\n      - MONGO: mongodb://127.0.0.1:27017/fdm-monster\n      - SERVER_PORT: 4000\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Please continue by reading the ",(0,i.jsx)(n.a,{href:"/docs/installing/docker_compose",children:"Docker Compose section"})," for more information on how\nto setup FDM Monster and MongoDB with docker-compose."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>d});var i=o(6540);const r={},t=i.createContext(r);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);