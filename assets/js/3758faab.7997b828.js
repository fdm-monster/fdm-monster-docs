"use strict";(self.webpackChunkfdm_monster_docs=self.webpackChunkfdm_monster_docs||[]).push([[7904],{8629:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var o=n(4848),i=n(8453);const a={title:"MongoDB to SQLite",authors:["davidzwa"],tags:["devblog"],slug:"/mongodb_to_sqlite",description:"Just a quick update"},s=void 0,r={permalink:"/blog/mongodb_to_sqlite",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/blog/2023/12-25 MongoDB to SQLite/index.mdx",source:"@site/blog/2023/12-25 MongoDB to SQLite/index.mdx",title:"MongoDB to SQLite",description:"Just a quick update",date:"2023-12-25T00:00:00.000Z",tags:[{inline:!0,label:"devblog",permalink:"/blog/tags/devblog"}],readingTime:.98,hasTruncateMarker:!0,authors:[{name:"David Zwart",title:"Founder / Lead Developer",url:"https://github.com/davidzwa",page:{permalink:"/blog/authors/davidzwa"},socials:{github:"https://github.com/davidzwa",linkedin:"https://www.linkedin.com/in/david-zwart-88514083/"},imageURL:"https://github.com/davidzwa.png",key:"davidzwa"}],frontMatter:{title:"MongoDB to SQLite",authors:["davidzwa"],tags:["devblog"],slug:"/mongodb_to_sqlite",description:"Just a quick update"},unlisted:!1,lastUpdatedAt:1730641007e3,lastUpdatedBy:"Maurice Kevenaar",prevItem:{title:"Connectivity to OctoPrint",permalink:"/blog/connectivity-to-octoprint"},nextItem:{title:"Blog 6",permalink:"/blog/blog6"}},l={authorsImageUrls:[void 0]},d=[{value:"An easier setup without external database",id:"an-easier-setup-without-external-database",level:2},{value:"Next year",id:"next-year",level:2}];function c(e){const t={h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"an-easier-setup-without-external-database",children:"An easier setup without external database"}),"\n",(0,o.jsxs)(t.p,{children:["Time for an update from my end. In the previous months I've announced a shift from MongoDB to SQLite. The SQLite database code is nearing completion, and Im testing the server + web client together now. So far things seem to work beautifully!\nThe migration process is not an easy one, and I want the transition from MongoDB to SQLite to be as smooth as possible for all existing users! Please hold tight for those reasons.\nUsers starting afresh would not have this complex route, so if anyone is interested I can already look at releasing a test docker container with SQLite - ",(0,o.jsx)(t.strong,{children:"thumbs up below to show interest!"})]}),"\n",(0,o.jsx)(t.h2,{id:"next-year",children:"Next year"}),"\n",(0,o.jsx)(t.p,{children:"Pushing the project to the next quality level"}),"\n",(0,o.jsx)(t.p,{children:"My focus will be on:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"fixing file list inconsistency on the backend (f.e. for batch uploads)"}),"\n",(0,o.jsx)(t.li,{children:"making the OctoPrint socket connection more reliable, and making the web client refresh button more usable when the connection is disrupted"}),"\n",(0,o.jsx)(t.li,{children:"improving the camera stream and statistics page"}),"\n",(0,o.jsx)(t.li,{children:"docs"}),"\n",(0,o.jsx)(t.li,{children:"small feature requests (like a 'group' feature, or more feature-rich import from OctoFarm)"}),"\n",(0,o.jsx)(t.li,{children:"UI responsiveness"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);